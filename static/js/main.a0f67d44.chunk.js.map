{"version":3,"sources":["components/TodoItem.js","components/Todos.js","components/layout/Header.js","components/AddTodo.js","components/layout/Footer.js","store/containers/Footer.js","store/actions/changeThemeAction.js","components/TodoApp.js","store/reducers/themeReducer.js","store/reducers/index.js","index.js"],"names":["TodoItem","this","props","todo","completed","id","title","className","type","checked","onChange","handleChange","onClick","deleteTodo","React","Component","Todos","todos","map","key","Header","AddTodo","useState","setTitle","onSubmit","e","preventDefault","addTodo","placeholder","value","target","Footer","submitThemeColor","bind","color","console","log","saveColorTheme","nextprops","JSON","stringify","document","documentElement","style","setProperty","themeColor","connect","state","dispatch","payload","saveTheme","TodoApp","setState","useEffect","axios","get","params","_limit","then","response","data","todoData","post","delete","reponse","filter","initState","combineReducers","action","Object","assign","store","createStore","rootReducer","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.a0f67d44.chunk.js","sourcesContent":["import React from \"react\";\n\nclass TodoItem extends React.Component {\n    render() {\n        const { completed, id, title } = this.props.todo\n        return (\n            <li className=\"todo-item\">\n                <input\n                    type=\"checkbox\"\n                    checked={completed}\n                    onChange={() => this.props.handleChange(id)}\n                />\n                <span className={completed ? \"completed\" : null}>\n                    {title}\n                </span>\n                <button className=\"btn-style\" onClick={() => this.props.deleteTodo(id)}> X </button>\n            </li>\n        );\n\n    }\n}\nexport default TodoItem;\n","import React from \"react\";\nimport TodoItem from \"./TodoItem\";\n\nclass Todos extends React.Component {\n    render() {\n        return (\n            <div>\n                <ul>\n                    {this.props.todos.map(todo => (\n                        <TodoItem\n                            key={todo.id}\n                            todo={todo}\n                            handleChange={this.props.handleChange}\n                            deleteTodo={this.props.deleteTodo}\n                        />\n\n\n                    ))}\n                </ul>\n            </div>\n        );\n    }\n}\nexport default Todos;\n\n","import React from \"react\";\n\nclass Header extends React.Component {\n    render() {\n        return (\n            <header className=\"header-container\">\n                <h1 className=\"header-title\">Simple Todo App</h1>\n            </header>\n\n        );\n    }\n};\nexport default Header;\n","import React, { useState } from \"react\";\n\nfunction AddTodo (props) {\n    const [title, setTitle] = useState(\"\");\n\n    const onInputChange = e => {\n        setTitle(e.target.value)\n    };\n\n    const addTodo = e => {\n        e.preventDefault();\n        props.addTodo(title);\n        setTitle(\"\");\n    };\n\n    return (\n            <form className=\"form-container\" onSubmit={addTodo}>\n                <input\n                    type=\"text\"\n                    placeholder=\"Add Todo...\"\n                    className=\"input-text\"\n                    value={title}\n                    onChange={onInputChange}\n                />\n                <input \n                    type=\"submit\" \n                    value=\"Submit\" \n                    className=\"input-submit\"/>\n            </form>\n    );\n    \n}\nexport default AddTodo;\n","import React from \"react\";\n\nconst RED = \"#ff0000\";\nconst BLUE = \"#0000ff\";\nconst GRAY = \"#678c89\";\n\nclass Footer extends React.Component {\n    constructor(props) {\n        super(props)\n\n        this.submitThemeColor = this.submitThemeColor.bind(this)\n    }\n\n    submitThemeColor(color) {\n        if (color) {\n            console.log('handleChangeTheme')\n            this.props.saveColorTheme(color);\n        }\n    };\n\n    componentWillReceiveProps(nextprops) {\n        console.log('UNSAFE_componentWillReceiveProps: ' + JSON.stringify(nextprops))\n        document\n            .documentElement\n            .style\n            .setProperty(\"--main-color\", nextprops.themeColor.color);\n    }\n\n\n\n\n    render() {\n        return (\n            <div className=\"footer\">\n                <div className=\"vertical-center\">\n                    <span>Choose Theme </span>\n                    <button onClick={() => this.submitThemeColor(RED)} className=\"dot red\" />\n                    <button onClick={() => this.submitThemeColor(BLUE)} className=\"dot blue\" />\n                    <button onClick={() => this.submitThemeColor(GRAY)} className=\"dot gray\" />\n                </div>\n            </div>\n        );\n    }\n};\nexport default Footer;\n","import { connect } from 'react-redux';\nimport { saveTheme } from '../actions/changeThemeAction';\nimport Footer from '../../components/layout/Footer';\n\nconst mapDispatchToProps = dispatch => ({\n  dispatch,\n  saveColorTheme: color => dispatch(saveTheme(color)),\n});\n\nfunction mapStateToProps(state){\n  return {\n    themeColor: state.color\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Footer);\n","export const saveTheme = color => ({\n    type: \"CHANGE_THEME\",\n    payload: {\n        color\n    }\n});\n","import React, { useState, useEffect } from \"react\";\nimport Todos from \"./Todos\";\nimport Header from \"../components/layout/Header\";\nimport AddTodo from \"./AddTodo\"\nimport Footer from \"../store/containers/Footer\";\n//khai báo thư viện axios\nimport axios from \"axios\";\n\nfunction TodoApp() {\n\n    const [state, setState] = useState({\n        todos: []\n    });\n    const handleCheckboxChange = id => {\n        setState({\n            todos: state.todos.map(todo => {\n                if (todo.id === id) {\n                    todo.completed = !todo.completed;\n                }\n                return todo;\n            })\n        });\n    };\n    const deleteTodo = id => {\n        axios.delete(`https://jsonplaceholder.typicode.com/todos/${id}`)\n            .then(reponse => setState({\n                todos: [\n                    ...state.todos.filter(todo => {\n                        return todo.id !== id;\n                    })\n                ]\n            }))\n    };\n\n    const addTodo = title => {\n        const todoData = {\n            title: title,\n            completed: false\n        }\n        axios.post(\"https://jsonplaceholder.typicode.com/todos\", todoData)\n            .then(response => {\n                console.log(response.data)\n                setState({\n                    todos: [...state.todos, response.data]\n                })\n            });\n    };\n\n    useEffect(() => {\n        const config = {\n            params: {\n                _limit: 5\n            }\n\n        }\n        // tạo GET request để lấy danh sách todos\n        axios.get(\"https://jsonplaceholder.typicode.com/todos\", config)\n            .then(response => setState({ todos: response.data }));\n    }, []);\n\n    return (\n        <div className=\"container\">\n            <Header />\n            <AddTodo addTodo={addTodo} />\n            <Todos todos={state.todos}\n                handleChange={handleCheckboxChange}\n                deleteTodo={deleteTodo} />\n            <Footer />\n        </div>\n    );\n\n}\nexport default TodoApp;\n","let initState = {\n    color: \"#FFFFFF\"\n  };\n  \nexport default function themeReducer(state = initState, action) {\n    switch (action.type) {\n      case 'CHANGE_THEME':\n          console.log('themeReducer: ' + JSON.stringify(state))\n        return Object.assign({}, state, {\n          color: action.payload.color\n        });\n      default:\n        return initState;\n    }\n}\n","import { combineReducers } from 'redux';\nimport color from './themeReducer';\n\nexport default combineReducers({\n    color\n});\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./App.css\";\nimport TodoApp from \"./components/TodoApp\";\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux';\nimport rootReducer from './store/reducers';\n\nconst store = createStore(rootReducer);\n\n\nReactDOM.render(\n    <Provider store={store}>\n      <TodoApp />\n    </Provider>, document.getElementById('root'));\n\n"],"sourceRoot":""}